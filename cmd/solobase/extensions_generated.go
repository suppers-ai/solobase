// Code generated by generate-extensions.go. DO NOT EDIT.

package main

import (
	"fmt"
	"github.com/suppers-ai/solobase/extensions/core"
	"github.com/suppers-ai/solobase/extensions/official/analytics"
	"github.com/suppers-ai/solobase/extensions/official/cloudstorage"
	// "github.com/suppers-ai/solobase/extensions/official/hugo" // Temporarily disabled
	"github.com/suppers-ai/solobase/extensions/official/products"
	"github.com/suppers-ai/solobase/extensions/official/webhooks"
)

// RegisterExtensions registers all discovered extensions
func RegisterExtensions(registry *core.ExtensionRegistry) error {
	// Register analytics
	if err := registry.Register(analytics.NewAnalyticsExtension()); err != nil {
		return fmt.Errorf("failed to register analytics extension: %w", err)
	}
	// Register cloudstorage
	if err := registry.Register(cloudstorage.NewCloudStorageExtension(nil)); err != nil {
		return fmt.Errorf("failed to register cloudstorage extension: %w", err)
	}
	// Register hugo - temporarily disabled
	// if err := registry.Register(hugo.NewHugoExtension()); err != nil {
	// 	return fmt.Errorf("failed to register hugo extension: %w", err)
	// }
	// Register products
	if err := registry.Register(products.NewProductsExtension()); err != nil {
		return fmt.Errorf("failed to register products extension: %w", err)
	}
	// Register webhooks
	if err := registry.Register(webhooks.NewWebhooksExtension()); err != nil {
		return fmt.Errorf("failed to register webhooks extension: %w", err)
	}

	return nil
}

// GetExtensionList returns a list of all available extensions
func GetExtensionList() []string {
	return []string{
		"analytics",
		"cloudstorage",
		// "hugo", // Temporarily disabled
		"products",
		"webhooks",
	}
}
