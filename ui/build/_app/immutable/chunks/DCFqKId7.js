var c=Object.defineProperty;var d=(o,e,t)=>e in o?c(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var i=(o,e,t)=>d(o,typeof e!="symbol"?e+"":e,t);const u="/api";class h{constructor(){i(this,"token",null);typeof window<"u"&&(this.token=localStorage.getItem("auth_token"))}setToken(e){this.token=e,typeof window<"u"&&localStorage.setItem("auth_token",e)}decodeToken(e){try{const s=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),r=decodeURIComponent(atob(s).split("").map(function(n){return"%"+("00"+n.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(r)}catch(t){return console.error("Failed to decode token:",t),null}}getRolesFromToken(){if(!this.token)return[];const e=this.decodeToken(this.token);return(e==null?void 0:e.roles)||[]}async request(e,t={}){const s={"Content-Type":"application/json",...t.headers};this.token&&(s.Authorization=`Bearer ${this.token}`);try{const r=await fetch(`${u}${e}`,{...t,headers:s,credentials:"include"}),n=await r.text();if(!n){if(!r.ok)throw new Error(`HTTP ${r.status}: Empty response`);return{data:{}}}let a;try{a=JSON.parse(n)}catch{throw console.error("Failed to parse response:",n),new Error(`Invalid JSON response: ${n.substring(0,100)}`)}if(!r.ok)throw r.status===401&&this.token&&(console.log("Token invalid, clearing from storage"),this.token=null,typeof window<"u"&&localStorage.removeItem("auth_token")),new Error(a.error||`HTTP ${r.status}`);return{data:a}}catch(r){return console.error("API request failed:",r),{error:r instanceof Error?r.message:"An error occurred"}}}async login(e){var s;console.log("API login request:",e);const t=await this.request("/auth/login",{method:"POST",body:JSON.stringify(e)});return console.log("API login response:",t),(s=t.data)!=null&&s.token&&(this.token=t.data.token,typeof window<"u"&&(localStorage.setItem("auth_token",this.token),console.log("Token stored in localStorage"))),t}async logout(){const e=await this.request("/auth/logout",{method:"POST"});return this.token=null,typeof window<"u"&&localStorage.removeItem("auth_token"),e}async signup(e){return this.request("/auth/signup",{method:"POST",body:JSON.stringify(e)})}async getCurrentUser(){console.log("Getting current user, token:",this.token?"present":"missing");const e=await this.request("/auth/me");return console.log("Current user response:",e),e}async getUsers(e=1,t=20){return this.request(`/admin/users?page=${e}&page_size=${t}`)}async getUser(e){return this.request(`/admin/users/${e}`)}async updateUser(e,t){return this.request(`/admin/users/${e}`,{method:"PATCH",body:JSON.stringify(t)})}async deleteUser(e){return this.request(`/admin/users/${e}`,{method:"DELETE"})}async getDatabaseTables(){return this.request("/admin/database/tables")}async getTableColumns(e){return this.request(`/admin/database/tables/${e}/columns`)}async executeQuery(e){return this.request("/admin/database/query",{method:"POST",body:JSON.stringify({query:e})})}async getStorageBuckets(){return this.request("/storage/buckets")}async getBucketObjects(e){return this.request(`/storage/buckets/${e}/objects`)}async uploadFile(e,t,s){const r=new FormData;r.append("file",t),s&&r.append("parent_folder_id",s);const n=await fetch(`${u}/storage/buckets/${e}/upload`,{method:"POST",headers:{Authorization:this.token?`Bearer ${this.token}`:""},body:r,credentials:"include"}),a=await n.json();return n.ok?{data:a}:{error:a.error||`HTTP ${n.status}`}}async deleteObject(e,t){return this.request(`/storage/buckets/${e}/objects/${t}`,{method:"DELETE"})}async createFolder(e,t,s){return this.request(`/storage/buckets/${e}/folders`,{method:"POST",body:JSON.stringify({name:t,parent_folder_id:s})})}async getSettings(){return this.request("/settings")}async updateSettings(e){return this.request("/admin/settings",{method:"PATCH",body:JSON.stringify(e)})}async getDashboardStats(){return this.request("/dashboard/stats")}async getExtensions(){return this.request("/admin/extensions")}async toggleExtension(e,t){return this.request(`/admin/extensions/${e}/toggle`,{method:"POST",body:JSON.stringify({enabled:t})})}async getExtensionStatus(){return this.request("/admin/extensions/status")}async getAnalyticsStats(){return this.request("/ext/analytics/stats")}async getAnalyticsPageviews(){return this.request("/ext/analytics/pageviews")}async getAnalyticsDailyStats(e=7){return this.request(`/ext/analytics/daily?days=${e}`)}async trackAnalyticsEvent(e){return this.request("/ext/analytics/track",{method:"POST",body:JSON.stringify(e)})}async exportAnalytics(){return this.request("/admin/analytics/export")}async clearAnalytics(){return this.request("/admin/analytics/clear",{method:"DELETE"})}async getWebhooks(){return this.request("/ext/webhooks/webhooks")}async createWebhook(e){return this.request("/ext/webhooks/webhooks",{method:"POST",body:JSON.stringify(e)})}async toggleWebhook(e,t){return this.request(`/ext/webhooks/webhooks/${e}/toggle`,{method:"POST",body:JSON.stringify({active:t})})}async deleteWebhooks(e){return this.request("/admin/webhooks/delete",{method:"DELETE",body:JSON.stringify({ids:e})})}async get(e){const t=await this.request(e);return t.data!==void 0?t.data:t}async post(e,t){const s=await this.request(e,{method:"POST",body:t?JSON.stringify(t):void 0});return s.data!==void 0?s.data:s}async put(e,t){const s=await this.request(e,{method:"PUT",body:t?JSON.stringify(t):void 0});return s.data!==void 0?s.data:s}async patch(e,t){const s=await this.request(e,{method:"PATCH",body:t?JSON.stringify(t):void 0});return s.data!==void 0?s.data:s}async delete(e){const t=await this.request(e,{method:"DELETE"});return t.data!==void 0?t.data:t}}const g=new h;export{g as a};
